{"version":3,"sources":["ui/templates/generic/styles.ts","ui/templates/generic/index.tsx","styles/defaults.ts","ui/atoms/overlay/styles.ts","ui/atoms/overlay/index.tsx","ui/atoms/field/index.tsx","ui/atoms/form/styles.ts","ui/atoms/form/index.tsx","ui/atoms/timer/styles.ts","ui/organisms/chat/styles.ts","ui/organisms/chat/index.tsx","ui/organisms/drawer/styles.ts","features/messages/model.ts","features/users/model.ts","lib/debounce.ts","features/game/model.ts","api/socket.ts","api/index.ts","features/draw/model.ts","ui/organisms/drawer/index.tsx","ui/organisms/online/styles.ts","ui/organisms/online/index.tsx","ui/organisms/login/styles.ts","ui/organisms/login/index.tsx","pages/main/styles.ts","ui/atoms/timer/index.tsx","features/user/model.ts","lib/form-factories.ts","pages/main/model.ts","lib/validators.ts","lib/create-countdown.ts","pages/main/index.tsx","pages/login/model.ts","pages/login/styles.ts","pages/login/index.tsx","index.tsx"],"names":["GenericContainer","styled","div","GenericTemplate","children","GenericStyles","createGlobalStyle","normalize","OverlayContainer","Overlay","props","Field","store","config","className","label","name","placeholder","autofocus","isDisabled","$value","changed","inputOptions","autoFocus","value","useStore","type","onChange","disabled","autoComplete","FormContainer","form","Form","handleSubmit","onSubmit","e","preventDefault","CountdownContainer","ChatContainer","MessagesContainer","Message","MessageHeader","MessageContent","NoMessagesContainer","MessageItem","msg","ts","React","isVisible","setVisible","aria-hidden","NoMessages","role","aria-label","Chat","history","length","map","item","key","DrawerContainer","DrawerCanvas","canvas","receiveMsg","createEvent","setChatHistory","$chatHistory","createStore","on","_","serverHistory","setUsersOnline","receiveTyping","stopTyping","$usersOnline","$usersTyping","usersList","typer","includes","watch","cb","wait","h","args","clearTimeout","setTimeout","debounce","filter","user","setCountdown","$roundTimer","time","socket","require","io","sendMsg","createEffect","handler","message","emit","sendTyping","sendDrawning","coordiantes","drawImage","users","chatHistory","$coordinates","x1","y1","x2","y2","coordinates","use","API","dpi","window","devicePixelRatio","drawLine","originalMousePosition","newMousePosition","ref","ctx","getContext","strokeStyle","lineJoin","lineWidth","beginPath","moveTo","x","y","lineTo","closePath","stroke","getCoordinates","pageX","offsetLeft","pageY","offsetTop","Drawer","cvs","paint","isPainting","painting","setCoordinates","current","width","scrollWidth","height","scrollHeight","startPainting","addEventListener","removeEventListener","handlePainting","newCoordinates","stopPainting","OnlineContainer","UserAvatar","Host","OnlineUsers","typing","host","id","data-typing","LoginContainer","LoginSubmit","button","Login","isError","isLoading","aria-disabled","data-disabled","MainContainer","Main","main","Aside","aside","RightPanel","MessageField","FormSubmit","input","RoundTimer","r","cx","cy","style","strokeDashoffset","signIn","credentials","$session","createField","initialValue","validator","handleReset","$error","payload","currentTarget","substring","createForm","fields","$isValid","validateFields","$values","combine","reduce","acc","allStores","all","every","submitMessage","resetMessage","disableForm","$ticksLeft","$isCountdownEnd","msgField","loginForm","formStatus","start","abort","timeout","tick","timer","ms","Promise","resolve","$working","seconds","guard","source","pending","is","target","forward","from","to","done","params","createCountdown","$msg","Date","getTime","$isFormValid","isValid","isEnd","sample","prepend","MainPage","session","ticksLeft","isFormValid","roundTimer","randomEmoji","submitForm","nameField","random","count","character","test","LoginPageContainer","LoginField","LoginPage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.aa052f6d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const GenericContainer = styled.div``;\n","import * as React from \"react\";\n\nimport { GenericContainer } from \"./styles\";\n\nexport const GenericTemplate: React.FC = ({ children }) => (\n  <GenericContainer>{children}</GenericContainer>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nexport const GenericStyles = createGlobalStyle`\n  ${normalize}\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  :root {\n    --main-font: \"Roboto\", sans-serif;\n    --title-font: \"Roboto\", sans-serif;\n    --primary: #2B50EF;\n    --secondary: #fff;\n    --warning: #FE2B29;\n    --highlight: #F9F6DF;\n    --text-color: #848B97;\n    --text-color--secondary: #C4C9D5;\n    --title-color: #404346;\n    --link-active: #03a9f4;\n    --link-hover: #2196f3;\n    --border-color: #E3E4EC;\n    --body-bg: #F5F6FA;\n    --block-bg: #fff;\n    --red: #CD4040;\n    --green: #64CA95;\n    --blue: #157efb;\n    --box-shadow: 0 5px 15px -5px rgba(0, 0, 0, 0.1);\n  }\n\n  body,\n  html {\n    font-family: var(--main-font);\n    color: var(--text-color);\n    background-color: var(--body-bg);\n    font-size: 62.5%;\n    line-height: 1.4;\n    font-weight: 400;\n    min-width: 320px;\n    margin-left: auto;\n    margin-right: auto;\n    width: 100%;\n    height: 100%;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  section {\n    font-size: 1.6rem;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    font-family: var(--main-font);\n    line-height: 1.1;\n    color: var(--text-color);\n  }\n\n  p {\n    font-family: var(--text-font);\n  }\n\n  button {\n    border: 0;\n  }\n\n  input {\n    border: 0;\n  }\n\n  a {\n    border: 0;\n    transition: 0.2s;\n    text-decoration: none;\n    color: var(--black);\n  }\n\n  a:visited,\n  a:focus,\n  a:active,\n  a:hover {\n    outline: 0 none;\n  }\n\n  img {\n    border: 0;\n  }\n\n  menu,\n  ol,\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    list-style-type: none;\n  }\n\n  section,\n  header,\n  footer {\n    font-size: 1.6rem;\n  }\n \n  \n`;\n","import styled from \"styled-components\";\n\nexport const OverlayContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.35);\n  opacity: 0;\n  z-index: -1;\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n\n  &[aria-hidden=\"true\"] {\n    opacity: 1;\n    z-index: 999;\n  }\n`;\n","import * as React from \"react\";\n\nimport { OverlayContainer } from \"./styles\";\n\ntype OverlayProps = {\n  onClick?: () => void;\n};\n\nexport const Overlay: React.FC<OverlayProps> = props => <OverlayContainer {...props} />;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Store, Event } from \"effector\";\nimport { useStore } from \"effector-react\";\n\nexport type FieldParams = {\n  className?: string;\n  store: {\n    name: string;\n    $value: Store<string>;\n    $error: Store<string | null>;\n    changed: Event<React.SyntheticEvent<HTMLInputElement>>;\n  };\n  config: {\n    label?: string;\n    name: string;\n    placeholder?: string;\n    autofocus?: boolean;\n    isDisabled?: boolean;\n  };\n};\n\nexport const Field: React.FC<FieldParams> = ({ store, config, className }) => {\n  const { label, name, placeholder, autofocus, isDisabled = false } = config;\n  const {\n    //\n    $value,\n    // $error,\n    changed,\n  } = store;\n\n  const value = useStore($value);\n  // const error = useStore($error);\n  // const isError = !!error;\n\n  const inputOptions = {\n    autoFocus: autofocus,\n    value,\n    type: name,\n    name,\n    placeholder,\n    onChange: changed,\n  };\n\n  return (\n    <div className={className}>\n      {label && <label>{label}</label>}\n      <input {...inputOptions} disabled={isDisabled} autoComplete=\"off\" />\n      {/* {isError && <Error>{error}</Error>} */}\n    </div>\n  );\n};\n\nexport const Error = styled.div`\n  width: 100%;\n  text-align: center;\n  font-size: 1.2rem;\n  line-height: 1;\n  margin-top: 12px;\n`;\n","import styled from \"styled-components\";\n\nexport const FormContainer = styled.form`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  max-height: 230px;\n  border-top: 1px solid var(--border-color);\n  background-color: var(--block-bg);\n  display: flex;\n  align-items: center;\n  min-height: 8vh;\n  transition: 0.3s;\n`;\n","import * as React from \"react\";\n\nimport { FormContainer } from \"./styles\";\n\ntype MessageFormProps = {\n  handleSubmit: () => void;\n};\n\nexport const Form: React.FC<MessageFormProps> = ({ handleSubmit, children }) => {\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    handleSubmit && handleSubmit();\n  };\n\n  return <FormContainer onSubmit={onSubmit}>{children}</FormContainer>;\n};\n","import styled from \"styled-components\";\n\nconst sircleSize = 226;\n\nexport const CountdownContainer = styled.div<{ time: number }>`\n  svg {\n    width: 80px;\n    height: 80px;\n    transform: rotateY(-180deg) rotateZ(-90deg);\n  }\n\n  circle {\n    stroke-dasharray: ${sircleSize}px;\n    stroke-linecap: round;\n    stroke-width: 6px;\n    stroke: var(--green);\n    fill: none;\n    transition: 0.3s all;\n  }\n\n  span {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 2rem;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const ChatContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: 100%;\n`;\n\nexport const MessagesContainer = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  height: calc(100vh - 128px);\n  padding-top: 18px;\n  padding-bottom: 18px;\n  width: 100%;\n  overflow-y: auto;\n`;\n\nexport const Message = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n`;\n\nexport const MessageHeader = styled.div`\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2rem;\n  border-radius: 3px;\n  background-color: var(--body-bg);\n  letter-spacing: -2px;\n  margin-right: 12px;\n`;\n\nexport const MessageContent = styled.div`\n  width: 70%;\n  padding: 6px 30px 7px 0;\n  font-size: 1.4rem;\n  color: #000;\n`;\n\nexport const NoMessagesContainer = styled.div`\n  position: absolute;\n  font-size: 1.6rem;\n  margin: auto;\n  height: calc(100vh - 128px);\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  padding: 0 36px;\n  text-align: center;\n\n  span {\n    width: 100%;\n    text-align: center;\n    font-size: 3.6rem;\n  }\n`;\n","import * as React from \"react\";\n\nimport { MsgProps } from \"api/socket\";\n\nimport {\n  //\n  ChatContainer,\n  MessagesContainer,\n  Message,\n  MessageHeader,\n  MessageContent,\n  NoMessagesContainer,\n} from \"./styles\";\n\nconst MessageItem: React.FC<MsgProps> = ({ name, ts, msg }) => {\n  const [isVisible, setVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    setVisible(true);\n  }, []);\n\n  return (\n    <Message aria-hidden={isVisible}>\n      <MessageHeader>{name}</MessageHeader>\n      <MessageContent>{msg}</MessageContent>\n    </Message>\n  );\n};\n\nconst NoMessages = () => {\n  return (\n    <NoMessagesContainer>\n      <span role=\"img\" aria-label=\"No messages\">\n        🙂\n      </span>\n      В чате пока нет сообщений, будте первым!\n    </NoMessagesContainer>\n  );\n};\n\ntype ChatProps = {\n  history: MsgProps[];\n};\n\nexport const Chat: React.FC<ChatProps> = ({ history, children }) => {\n  return (\n    <ChatContainer>\n      <MessagesContainer>\n        {history.length > 0 ? (\n          history.map((item, key) => <MessageItem key={key} {...item} />)\n        ) : (\n          <NoMessages />\n        )}\n      </MessagesContainer>\n      {children}\n    </ChatContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const DrawerContainer = styled.div`\n  display: flex;\n`;\n\nexport const DrawerCanvas = styled.canvas`\n  width: 100%;\n  min-height: 100vh;\n`;\n","import { createEvent, createStore } from \"effector\";\n\nimport * as API from \"api/socket\";\n\nexport const receiveMsg = createEvent<API.MsgProps>();\nexport const sendMsg = createEvent<API.MsgProps>();\nexport const setChatHistory = createEvent<API.MsgProps[]>();\n\nexport const $chatHistory = createStore<[] | API.MsgProps[]>([]);\n\n$chatHistory.on(setChatHistory, (_, serverHistory) => serverHistory);\n\n$chatHistory.on(receiveMsg, (history, msg) => [msg, ...history]);\n","import { createStore, createEvent } from \"effector\";\nimport * as API from \"api/socket\";\nimport { debounce } from \"lib/debounce\";\n\nexport const setUsersOnline = createEvent<API.UsersProps[]>();\nexport const receiveTyping = createEvent<string>();\nexport const stopTyping = createEvent<string>();\n\nexport const $usersOnline = createStore<API.UsersProps[]>([]);\nexport const $usersTyping = createStore<string[]>([]);\n\n$usersOnline.on(setUsersOnline, (_, usersList) => usersList);\n\n$usersTyping.on(receiveTyping, (usersList, typer) => {\n  if (!usersList.includes(typer)) {\n    return [...usersList, typer];\n  }\n});\n\nreceiveTyping.watch(debounce(stopTyping, 1000));\n\n$usersTyping.on(stopTyping, (usersList, typer) => usersList.filter(user => user !== typer));\n","export function debounce<T extends Function>(cb: T, wait = 20) {\n  let h = 0;\n  // eslint-disable-next-line\n  let callable;\n  return (callable = (...args: []) => {\n    clearTimeout(h);\n    // eslint-disable-next-line\n    h = <any>setTimeout(() => cb(...args), wait);\n  });\n}\n","import { createEvent, createStore } from \"effector\";\n\nexport const setCountdown = createEvent<number>();\n\nexport const $roundTimer = createStore<number>(0);\n\n$roundTimer.on(setCountdown, (_, time) => time);\n","import { createEffect } from \"effector\";\n\nimport { receiveMsg, setChatHistory } from \"features/messages\";\nimport { setUsersOnline, receiveTyping } from \"features/users\";\nimport { drawImage } from \"features/draw\";\nimport { setCountdown } from \"features/game\";\n\nimport { server } from \"./\";\n\nconst io = require(\"socket.io-client\");\n\nexport const socket = io(server);\n\nexport type UsersProps = {\n  name: string;\n  id: string;\n};\n\nexport type MsgProps = {\n  name: string | null;\n  ts: number;\n  msg: string;\n};\n\nexport type CoodrinateProps = {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n};\n\nexport type Credentials = {\n  name: string | null;\n};\n\nexport const signIn = (credentials: Credentials) => {\n  socket.emit(\"INIT_SESSION\", credentials);\n};\n\nexport const sendMsg = createEffect<MsgProps, void>({\n  handler(message) {\n    socket.emit(\"USER_MESSAGE\", message);\n  },\n});\n\nexport const sendTyping = createEffect<void, void>({\n  handler() {\n    socket.emit(\"USER_TYPING\");\n  },\n});\n\nexport const sendDrawning = createEffect<CoodrinateProps, void>({\n  handler(coordiantes) {\n    socket.emit(\"USER_DRAWNING\", coordiantes);\n  },\n});\n\n//\n\nsocket.on(\"USER_MESSAGE\", (msg: MsgProps) => {\n  receiveMsg(msg);\n});\n\nsocket.on(\"USER_TYPING\", (user: string) => {\n  receiveTyping(user);\n});\n\nsocket.on(\"USER_DRAWNING\", (coordiantes: CoodrinateProps) => drawImage(coordiantes));\nsocket.on(\"ROUND_COUNTDOWN\", (time: number) => setCountdown(time));\n\n//\nsocket.on(\"USERS_ONLINE\", (users: UsersProps[]) => setUsersOnline(users));\n\nsocket.on(\"CHAT_HISTORY\", (chatHistory: MsgProps[]) => {\n  setChatHistory(chatHistory);\n});\n","const isProduction = process.env.NODE_ENV === \"production\";\n\nexport const server = isProduction ? \"https://sharades-server.herokuapp.com\" : \":8080\";\n\ntype RequestProps = {\n  method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\n  url: string;\n  params?: any;\n};\n\ntype HeadersProps = {\n  Accept: string;\n  \"Content-Type\": string;\n};\n\nexport const apiRequest = async ({ method, url, params }: RequestProps) => {\n  const headers: HeadersProps = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  };\n\n  let response;\n\n  try {\n    response = await fetch(`/api/v1${url}`, {\n      method,\n      body: JSON.stringify(params),\n      headers,\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n\n  const headersType = response.headers.get(\"content-type\");\n\n  if (headersType && headersType.includes(\"application/json\")) {\n    const res = await response.json();\n    return res;\n  }\n};\n","import { createStore, createEffect, createEvent } from \"effector\";\nimport * as API from \"api/socket\";\n\nexport const drawImage = createEffect<API.CoodrinateProps, void>();\n\nexport const $coordinates = createStore({ x1: 0, y1: 0, x2: 0, y2: 0 });\n\n$coordinates.on(drawImage, (_, coordinates) => coordinates);\n\ndrawImage.use(API.sendDrawning);\n","import * as React from \"react\";\nimport { useStore } from \"effector-react\";\nimport { DrawerContainer, DrawerCanvas } from \"./styles\";\nimport { drawImage, $coordinates } from \"features/draw\";\n\nconst dpi = window.devicePixelRatio;\n\ntype PositionProps = {\n  x: number;\n  y: number;\n};\n\ntype EventProps = {\n  pageX: number;\n  pageY: number;\n};\n\nconst drawLine = (\n  originalMousePosition: PositionProps,\n  newMousePosition: PositionProps,\n  ref: HTMLCanvasElement\n) => {\n  const ctx = ref.getContext(\"2d\");\n\n  if (ctx) {\n    ctx.strokeStyle = \"#2b50ef\";\n    ctx.lineJoin = \"round\";\n    ctx.lineWidth = 12;\n\n    ctx.beginPath();\n    ctx.moveTo(originalMousePosition.x * dpi, originalMousePosition.y * dpi);\n    ctx.lineTo(newMousePosition.x * dpi, newMousePosition.y * dpi);\n    ctx.closePath();\n    ctx.stroke();\n  }\n};\n\nconst getCoordinates = (e: EventProps, ref: HTMLCanvasElement) => ({\n  x: e.pageX - ref.offsetLeft,\n  y: e.pageY - ref.offsetTop,\n});\n\nexport const Drawer = () => {\n  const cvs = React.useRef<HTMLCanvasElement | null>(null);\n  const paint = useStore($coordinates);\n\n  const [isPainting, painting] = React.useState(false);\n  const [coordinates, setCoordinates] = React.useState<PositionProps | null>(null);\n\n  React.useEffect(() => {\n    const { current } = cvs;\n\n    if (current) {\n      drawLine({ x: paint.x1, y: paint.y1 }, { x: paint.x2, y: paint.y2 }, current);\n    }\n  }, [paint]);\n\n  React.useEffect(() => {\n    const { current } = cvs;\n\n    if (current) {\n      current.width = current.scrollWidth * dpi;\n      current.height = current.scrollHeight * dpi;\n    }\n  }, []);\n\n  const startPainting = React.useCallback(e => {\n    const { current } = cvs;\n    if (current) {\n      const coordinates = getCoordinates(e, current);\n      if (coordinates) {\n        painting(true);\n        setCoordinates(coordinates);\n      }\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const { current } = cvs;\n    if (current) {\n      current.addEventListener(\"mousedown\", startPainting);\n      return () => {\n        current.removeEventListener(\"mousedown\", startPainting);\n      };\n    }\n  }, [startPainting]);\n\n  const handlePainting = React.useCallback(\n    e => {\n      const { current } = cvs;\n\n      if (current && isPainting) {\n        const newCoordinates = getCoordinates(e, current);\n        if (coordinates && newCoordinates) {\n          drawLine(coordinates, newCoordinates, current);\n          drawImage({\n            x1: coordinates.x,\n            y1: coordinates.y,\n            x2: newCoordinates.x,\n            y2: newCoordinates.y,\n          });\n          setCoordinates(newCoordinates);\n        }\n      }\n    },\n    [isPainting, coordinates]\n  );\n\n  React.useEffect(() => {\n    const { current } = cvs;\n    if (current) {\n      current.addEventListener(\"mousemove\", handlePainting);\n      return () => {\n        current.removeEventListener(\"mousemove\", handlePainting);\n      };\n    }\n  }, [handlePainting]);\n\n  const stopPainting = React.useCallback(() => {\n    painting(false);\n    setCoordinates(null);\n  }, []);\n\n  React.useEffect(() => {\n    const { current } = cvs;\n\n    if (current) {\n      current.addEventListener(\"mouseup\", stopPainting);\n      current.addEventListener(\"mouseleave\", stopPainting);\n      return () => {\n        current.removeEventListener(\"mouseup\", stopPainting);\n        current.removeEventListener(\"mouseleave\", stopPainting);\n      };\n    }\n  }, [stopPainting]);\n\n  return (\n    <DrawerContainer>\n      <DrawerCanvas ref={cvs} />\n    </DrawerContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const OnlineContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 12px;\n`;\n\nexport const UserAvatar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 3.6rem;\n  height: 3.6rem;\n  background: rgba(0, 0, 0, 0.1);\n  margin: 0.6rem;\n  border-radius: 3px;\n  font-size: 2.4rem;\n  letter-spacing: -2px;\n  position: relative;\n\n  &:before {\n    content: \"💬\";\n    position: absolute;\n    top: -8px;\n    right: -12px;\n    font-size: 1.6rem;\n    transition: 0.1s;\n  }\n\n  &[data-typing=\"false\"] {\n    &:before {\n      opacity: 0;\n    }\n  }\n\n  &[data-typing=\"true\"] {\n    &:before {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Host = styled(UserAvatar)`\n  position: relative;\n\n  &:before {\n    content: \"👑\";\n    position: absolute;\n    top: -17px;\n    font-size: 3rem;\n    left: auto;\n    right: auto;\n    margin: 0 auto;\n  }\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    bottom: -16px;\n    width: 100%;\n    height: 1px;\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n\n  width: 5.6rem;\n  height: 5.6rem;\n  font-size: 3.6rem;\n  margin-bottom: 24px;\n`;\n","import * as React from \"react\";\n\nimport { OnlineContainer, UserAvatar, Host } from \"./styles\";\n\nimport * as API from \"api/socket\";\n\ntype UsersProps = {\n  users: API.UsersProps[];\n  host: string;\n  typing: string[];\n};\n\nexport const OnlineUsers: React.FC<UsersProps> = ({ users, typing, host }) => {\n  return (\n    <OnlineContainer>\n      <Host>{host}</Host>\n      {users.map(({ name, id }, key) => (\n        <UserAvatar key={key} data-typing={typing.includes(id)}>\n          {name}\n        </UserAvatar>\n      ))}\n    </OnlineContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const LoginContainer = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  background-color: var(--block-bg);\n  border-radius: 6px;\n  padding: 24px;\n  max-width: 350px;\n`;\n\nexport const LoginSubmit = styled.button`\n  margin-top: 24px;\n  font-size: 1.6rem;\n  line-height: 3.6rem;\n  background-color: var(--primary);\n  color: #fff;\n  padding: 0 24px;\n  border-radius: 3px;\n\n  &[data-disabled=\"true\"] {\n    opacity: 0.7;\n  }\n`;\n","import * as React from \"react\";\n\nimport { LoginContainer, LoginSubmit } from \"./styles\";\n\ntype LoginProps = {\n  handleSubmit?: React.FormEventHandler<HTMLFormElement>;\n  isError?: boolean;\n  isLoading: boolean;\n};\n\nexport const Login: React.FC<LoginProps> = ({\n  children,\n  isError = false,\n  handleSubmit,\n  isLoading = false,\n}) => {\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    handleSubmit && handleSubmit(e);\n  };\n\n  return (\n    <LoginContainer onSubmit={onSubmit} aria-disabled={isLoading}>\n      {children}\n      <LoginSubmit type=\"submit\" name=\"submit\" data-disabled={isError}>\n        Войти\n      </LoginSubmit>\n    </LoginContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nimport { Field, Timer } from \"ui/atoms\";\n\nexport const MainContainer = styled.div`\n  display: flex;\n`;\n\nexport const Main = styled.main`\n  width: 100%;\n  min-height: 100vh;\n  position: relative;\n`;\n\nexport const Aside = styled.aside`\n  width: 100%;\n  max-width: 320px;\n  height: calc(100vh - 72px);\n  background-color: var(--block-bg);\n  position: absolute;\n  right: 96px;\n  top: 0;\n  bottom: 0;\n  margin: 36px;\n  border-radius: 5px;\n  box-shadow: var(--box-shadow);\n  z-index: 100;\n`;\n\nexport const RightPanel = styled.div`\n  width: 96px;\n  height: calc(100vh - 124px);\n  background-color: var(--primary);\n  position: absolute;\n  right: 0;\n  margin: 62px 36px;\n  border-radius: 0 5px 5px 0;\n  box-shadow: var(--box-shadow);\n`;\n\nexport const MessageField = styled(Field)`\n  font-size: 1.6rem;\n  line-height: 8vh;\n  padding: 0 24px 0 60px;\n  width: 100%;\n`;\n\nexport const UserAvatar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 3.6rem;\n  height: 3.6rem;\n  background-color: rgba(0, 0, 0, 0.05);\n  border-radius: 3px;\n  font-size: 2.4rem;\n  letter-spacing: -2px;\n  position: absolute;\n  z-index: 100;\n  top: 12px;\n  left: 12px;\n`;\n\nexport const FormSubmit = styled.input`\n  font-size: 1.4rem;\n  line-height: 1em;\n  min-height: 5vh;\n  background-color: var(--primary);\n  color: #fff;\n  padding: 0 12px;\n  border-radius: 3px;\n  position: absolute;\n  right: 12px;\n  transition: 0.3s;\n\n  &[aria-disabled=\"true\"] {\n    opacity: 0.7;\n  }\n\n  &[aria-disabled=\"false\"] {\n    opacity: 1;\n  }\n`;\n\nexport const RoundTimer = styled(Timer)`\n  position: absolute;\n  bottom: 36px;\n  left: 36px;\n`;\n","import * as React from \"react\";\n\nimport { CountdownContainer } from \"./styles\";\n\ntype TimerProps = {\n  className?: string;\n  time: number;\n};\n\nexport const Timer: React.FC<TimerProps> = ({ className, time }) => {\n  return (\n    <CountdownContainer time={time} className={className}>\n      <span>{time}</span>\n      <svg>\n        <circle r=\"36\" cx=\"40\" cy=\"40\" style={{ strokeDashoffset: `-${(226 / 100) * time}px` }} />\n      </svg>\n    </CountdownContainer>\n  );\n};\n","import { createStore, createEffect } from \"effector\";\nimport * as API from \"api/socket\";\n\nexport const signIn = createEffect<string, void>();\n\nsignIn.use((name: string) => API.signIn({ name }));\n\nexport const $session = createStore<API.Credentials>({\n  name: null,\n});\n\n$session.on(signIn, (_, name: string) => ({ name }));\n","import { createStore, createEvent, combine, Store, Event } from \"effector\";\n\ntype CreateFieldProps = {\n  name: string;\n  initialValue?: string;\n  length?: number;\n  validator?: (value: string) => string | null;\n  handleReset?: Event<any>;\n};\n\nexport type CreateFieldResult = {\n  name: string;\n  $value: Store<string>;\n  $error: Store<string | null>;\n  changed: Event<React.SyntheticEvent<HTMLInputElement>>;\n};\n\nexport const createField = ({\n  name,\n  length,\n  initialValue = \"\",\n  validator,\n  handleReset,\n}: CreateFieldProps): CreateFieldResult => {\n  const changed = createEvent<React.SyntheticEvent<HTMLInputElement>>(`${name}Changed`);\n\n  const $value = createStore(initialValue, { name: `${name}Store` });\n\n  const $error = validator ? $value.map(validator) : createStore<null | string>(null);\n\n  $value.on(changed, (_, payload) => payload.currentTarget.value.substring(0, length));\n\n  if (handleReset) {\n    $value.on(handleReset, () => \"\");\n  }\n\n  return { name, $value, $error, changed };\n};\n\ntype CreateFormProps = {\n  name: string;\n  fields: Array<CreateFieldResult>;\n  validator?: Store<boolean>;\n};\n\ntype CreateFormResults = {\n  $values: Store<{ [key: string]: string }>;\n  $isValid: Store<boolean>;\n  name: string;\n};\n\nexport const createForm = ({ name, fields, validator }: CreateFormProps): CreateFormResults => {\n  const $isValid = validator || validateFields(fields);\n\n  const $values = combine(\n    fields.reduce((acc, { $value, name }) => ({ ...acc, ...{ [name]: $value } }), {})\n  );\n\n  return { name, $values, $isValid };\n};\n\nexport const validateFields = (fields: CreateFieldResult[]) => {\n  const allStores = fields.map(({ $error }) => $error);\n  return combine(allStores, all => all.every((value: string | null) => !value));\n};\n","import { createEvent, createStore, guard, sample, combine, forward } from \"effector\";\n\nimport { sendMsg, sendTyping } from \"api/socket\";\nimport { $session } from \"features/user\";\n\nimport { createField, createForm } from \"lib/form-factories\";\n\nimport { createCountdown } from \"lib/create-countdown\";\nimport { validateMessage } from \"lib/validators\";\n\nexport const submitMessage = createEvent<void>();\n\nconst resetMessage = createEvent<void>();\nconst disableForm = createEvent<void | number>();\n\nexport const $ticksLeft = createStore<number>(0);\nconst $isCountdownEnd = createStore<boolean>(true);\n\nexport const msgField = createField({\n  name: \"message\",\n  handleReset: resetMessage,\n  validator: validateMessage,\n});\n\nexport const loginForm = createForm({\n  name: \"messageForm\",\n  fields: [msgField],\n});\n\nconst formStatus = createCountdown(\"formSubmit\", {\n  start: disableForm,\n});\n\n$ticksLeft.on(formStatus.tick, (_, seconds) => seconds);\n$isCountdownEnd.on(formStatus.tick, (_, seconds) => seconds <= 0);\n\nconst $msg = combine(msgField.$value, $session, (message, user) => ({\n  name: user.name,\n  ts: new Date().getTime(),\n  msg: message,\n}));\n\nexport const $isFormValid = combine(\n  loginForm.$isValid,\n  $isCountdownEnd,\n  (isValid, isEnd) => isValid && isEnd\n);\n\nguard({\n  source: sample($msg, submitMessage),\n  filter: $isFormValid,\n  target: sendMsg,\n});\n\nforward({ from: msgField.changed, to: sendTyping });\n\nforward({ from: sendMsg, to: resetMessage });\nforward({ from: sendMsg, to: disableForm.prepend(() => 5) });\n","export const validateEmoji = (name: string) => {\n  const emojiRejex = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/;\n\n  if (!emojiRejex.test(name)) {\n    return \"Только Emoji\";\n  }\n\n  return null;\n};\n\nexport const validateMessage = (msg: string) => {\n  if (msg.length < 1) {\n    return \"Пустое поле\";\n  }\n\n  return null;\n};\n","import {\n  createStore,\n  createEffect,\n  createEvent,\n  forward,\n  guard,\n  Event,\n} from 'effector';\n\ntype CreateTimerProps = {\n  start: Event<void | number>;\n  abort?: Event<void>;\n  timeout?: number;\n};\n\ntype CreateTimerResult = {\n  tick: Event<number>;\n};\n\nconst wait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\nexport const createCountdown = (\n  name: string,\n  {\n    start,\n    abort = createEvent(`${name}Reset`),\n    timeout = 1000,\n  }: CreateTimerProps,\n): CreateTimerResult => {\n  const tick = createEvent<number>(`${name}Tick`);\n  const timer = createEffect<number, void>(`${name}Timer`).use(() =>\n    wait(timeout),\n  );\n\n  const $working = createStore(true, { name: `${name}Working` });\n\n  $working\n    .on(timer, (_, seconds) => seconds > 0)\n    .on(abort, () => false)\n    .on(start, () => true);\n\n  guard({\n    source: start,\n    filter: timer.pending.map((is) => !is),\n    target: tick,\n  });\n\n  forward({\n    from: tick,\n    to: timer,\n  });\n\n  guard({\n    source: timer.done.map(({ params }) => params - 1),\n    filter: $working,\n    target: tick,\n  });\n\n  return { tick };\n};\n","import * as React from \"react\";\nimport { useStore } from \"effector-react\";\n\nimport { Form } from \"ui/atoms\";\nimport { Chat, Drawer, OnlineUsers } from \"ui/organisms\";\n\nimport {\n  MainContainer,\n  Main,\n  Aside,\n  RightPanel,\n  MessageField,\n  UserAvatar,\n  FormSubmit,\n  RoundTimer,\n} from \"./styles\";\n\nimport { $chatHistory } from \"features/messages\";\nimport { $session } from \"features/user\";\nimport { $usersOnline, $usersTyping } from \"features/users\";\nimport { $roundTimer } from \"features/game\";\n\nimport { submitMessage, msgField, $ticksLeft, $isFormValid } from \"./model\";\n\nexport const MainPage = () => {\n  const history = useStore($chatHistory);\n  const session = useStore($session);\n  const users = useStore($usersOnline);\n  const typing = useStore($usersTyping);\n  const ticksLeft = useStore($ticksLeft);\n  const isFormValid = useStore($isFormValid);\n  const roundTimer = useStore($roundTimer);\n\n  const handleSubmit = () => {\n    submitMessage();\n  };\n\n  return (\n    <MainContainer>\n      <Main>\n        <RoundTimer time={roundTimer} />\n        <Drawer />\n      </Main>\n      <Aside>\n        <Chat history={history}>\n          <Form handleSubmit={handleSubmit}>\n            <UserAvatar>{session.name}</UserAvatar>\n            <MessageField\n              store={msgField}\n              config={{\n                name: \"message\",\n                placeholder: \"Сообщение...\",\n                autofocus: true,\n              }}\n            />\n            <FormSubmit\n              type=\"submit\"\n              value={ticksLeft <= 0 ? \"Send\" : `00: 0${ticksLeft}`}\n              aria-disabled={!isFormValid}\n            />\n          </Form>\n        </Chat>\n      </Aside>\n      <RightPanel>\n        <OnlineUsers users={users} typing={typing} host=\"😱\" />\n      </RightPanel>\n    </MainContainer>\n  );\n};\n","import { createEvent, guard, sample } from \"effector\";\n\nimport { createField, createForm } from \"lib/form-factories\";\nimport { validateEmoji } from \"lib/validators\";\n\nimport { signIn } from \"features/user\";\n\nconst randomEmoji = require(\"random-emoji\");\n\nexport const submitForm = createEvent<React.FormEvent<HTMLFormElement>>();\n\nconst emoji = randomEmoji.random({ count: 1 });\n\nexport const nameField = createField({\n  name: \"name\",\n  initialValue: emoji[0].character,\n  validator: validateEmoji,\n});\n\nexport const loginForm = createForm({\n  name: \"loginForm\",\n  fields: [nameField],\n});\n\nguard({\n  source: sample(nameField.$value, submitForm),\n  filter: loginForm.$isValid,\n  target: signIn,\n});\n","import styled from \"styled-components\";\n\nimport { Field } from \"ui/atoms\";\n\nexport const LoginPageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  width: 100%;\n  min-height: 100vh;\n  background-color: var(--primary);\n`;\n\nexport const LoginField = styled(Field)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 100%;\n\n  input {\n    text-align: center;\n    width: 64px;\n    height: 64px;\n    font-size: 3.2rem;\n    line-height: 64px;\n    background-color: rgba(0, 0, 0, 0.05);\n    border-radius: 3px;\n    margin: 0 6px;\n    transition: 0.3s;\n    cursor: pointer;\n\n    &:hover {\n      background-color: var(--primary);\n    }\n  }\n\n  label {\n    width: 100%;\n    text-align: center;\n    font-size: 1.6rem;\n    margin-bottom: 12px;\n  }\n`;\n","import * as React from \"react\";\n\nimport { Overlay } from \"ui/atoms\";\nimport { Login } from \"ui/organisms\";\n\nimport { nameField, submitForm } from \"./model\";\nimport { LoginPageContainer, LoginField } from \"./styles\";\n\nexport const LoginPage = () => {\n  return (\n    <LoginPageContainer>\n      <Overlay aria-hidden=\"true\">\n        <Login handleSubmit={submitForm} isLoading={false}>\n          <LoginField\n            store={nameField}\n            config={{\n              label: \"Имя:\",\n              name: \"name\",\n            }}\n          />\n        </Login>\n      </Overlay>\n    </LoginPageContainer>\n  );\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { useStore } from \"effector-react\";\n\nimport { GenericTemplate } from \"ui/templates\";\nimport { GenericStyles } from \"styles\";\n\nimport { MainPage, LoginPage } from \"pages\";\nimport { $session } from \"features/user\";\n\nconst App = () => {\n  const session = useStore($session);\n\n  return (\n    <>\n      <GenericStyles />\n      <GenericTemplate>{session.name ? <MainPage /> : <LoginPage />}</GenericTemplate>\n    </>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}